syntax = "proto2";
package msg.user;

enum Result {
	success = 1;
	fail = 2;
	already_in_room = 3;      //已经在房间中了
	not_in_room = 4;   //没有在房间中
	nosupport_command = 5;  //不支持的命令
	invailed_user_id = 6;   //当前不该这个user_id出牌
	no_card = 7;            //没有这张牌
	cannot_hu = 8;			//不能胡牌
	cannot_peng = 9;        //不能碰牌
	cannot_gang = 10;        //不能杠
	cord_command = 11;       //已经记录该命令,无法立即处理
	not_exist_room = 12;	 //不存在这个房间
	sit_already_has = 13;    //座位已经有人了
	no_bind_room_id = 14;    //玩家没有绑定房间ID
	call_center_fail = 15;   //通知center服失败
	invalid_paramater = 16;  //错误的参数
	round_not_enough = 17;   //圈数不足
}

/*-------------------用户信息-----------------------*/

message UserInfo {
	required string user_id = 1;
	required string user_name = 2;
	required string user_pic = 3;
	required string user_ip = 4;
	required int32  user_pos = 5;
	required bool is_sit = 6;
}
/*-------------------------------------------------*/



/*--------------------创建房间----------------------*/
message CreateRoomReq {
	required int32 game_type = 1; 	 //游戏的类型
	required int32 round = 2;        //游戏的圈数
	required int32 pay_type = 3;     //支付类型 房主出资还是平摊
	required int32 seat_num = 4;     //游戏的人数
	required bool is_friend_room = 5; //是否只让好友进入
	required bool is_open_voice = 6; //是否开启语音聊天
	required bool is_open_gps = 7;   //是否开启GPS防作弊
	repeated int32 other_setting = 8; //具体游戏的设置
}

message CreateRoomRsp {
	required Result result = 1;
	optional int32 room_id = 2;
	repeated UserInfo players = 3;
}
/*-------------------------------------------------*/

/*------------------加入房间----------------------*/

message JoinRoomReq {
	required int32 room_id = 1;
}

message JoinRoomRsp {
	required Result result = 1;
	optional int32 room_id = 2;
	repeated UserInfo players = 3;
}
/*-------------------------------------------------*/


/*------------------离开房间----------------------*/

message LeaveRoomReq {
}

message LeaveRoomRsp {
	required Result result = 1;
}
/*-------------------------------------------------*/


/*-----------------玩家入座-----------------------*/
message SitDownReq {
	required int32 pos = 1;
}

message SitDownRsp {
	required Result result = 1;
}
/*-------------------------------------------------*/



/*-------------------------------------------------*/
// DEAL_FINISH  发牌完毕
// PLAY_CARD  出牌
// PENG    碰
// GANG    杠
// GUO     过
// DEMAND 	叫分
// 

// demandPoint 		// ddz当前玩家叫分(斗地主，0,1,2,3 表示分数， 欢乐斗地主只有0和1, 叫或者不叫)
// SendCards  	// ddz出牌的数组

// nowType 		// ddz当前出的牌的类型。(-1 是过)
// nowValue		// ddz当前牌的最大类型值(飞机，最大值应该是飞机的最大的那个值， 而不是取最大的牌值)
// cardList 	// ddz出牌消息 sizeof(cardList) == 20 最长是20个长度

message GameCmdReq {
	required string command = 1;
	optional int32  card = 2;

	// -------ddz----------------
	optional int32 demandPoint = 3;  
	optional int32 nowType = 4;
	optional int32 nowValue = 5;
	repeated int32 cardList = 6;
	// -------ddz_end------------
}

message GameCmdRsp {
	required Result result = 1;
}

/*-------------------游戏命令-----------------------*/




//-------------------推送消息------------------------------//

message PushUserInfo {
	optional string user_id = 1;
	optional string user_name = 2;
	optional string user_pic = 3;
	optional string user_ip = 4;
	optional int32  gold_num = 5;
	repeated int32  room_list = 6;   //玩家创建的所有房间号列表
}

/*-------------------刷新房间信息-------------------*/
message RefreshRoomInfo {
	required int32 room_id = 1;
	repeated UserInfo players = 2;
	required int32 game_type = 3; 	 //游戏的类型
	required int32 round = 4;        //游戏的圈数
	required int32 pay_type = 5;     //支付类型 房主出资还是平摊
	required int32 seat_num = 6;     //游戏的人数
	required bool is_friend_room = 7; //是否只让好友进入
	required bool is_open_voice = 8; //是否开启语音聊天
	required bool is_open_gps = 9;   //是否开启GPS防作弊
	repeated int32 other_setting = 10; //具体游戏的设置
}
/*-------------------------------------------------*/


/*-------------------推送玩家入座信息-------------------*/
message SitItem {
	required string user_id = 1;
	required int32 user_pos = 2;
}
message PushSitDown {
	required int32 room_id = 1;
	repeated SitItem sit_list = 2;
}
/*-------------------------------------------------*/

/*-------------------发牌-----------------*/
message DealCard {
	required int32 zpos = 1;   //庄家的位置
	optional int32 user_pos = 2;
	repeated int32 cards = 3;		 //玩家发到手里的牌
}
/*-------------------------------------------------*/


/*---------------通知其他人有人摸牌-----------------*/
message PushDrawCard {
	optional string user_id = 1;
	optional int32 card = 2;	//如果不是本人摸牌,则没有card
	optional int32 user_pos = 3;
}
/*-------------------------------------------------*/


/*-------------------通知玩家该出牌了-----------------*/
//	AN_GANG
//	MING_GANG
//	PENG_GANG
message GPItem {
	required int32 value = 1;
	optional int32 type = 2; //碰没有这个字段
}
message PushPlayCard {
	required string user_id = 1;
	optional int32 user_pos = 2;
	repeated int32 card_list = 3;  //玩家的手牌
	repeated GPItem peng_list = 4;	//碰列表
	repeated GPItem gang_list = 5;	//杠列表
}

/*-------------------------------------------------*/

/*-------------------通知其他人有人出牌-----------------*/
message NoticePlayCard {
	required string user_id = 1;
	required int32 card = 2;
	optional int32 user_pos = 3;
}
/*-------------------------------------------------*/


/*-------------------通知其他人有人碰牌-----------------*/
message NoticePengCard {
	required string user_id = 1;
	required int32 card = 2;
	optional int32 user_pos = 3;
}
/*-------------------------------------------------*/

/*-------------------通知其他人有人杠牌-----------------*/
enum GangType {
	AN_GANG = 1;
	MING_GANG = 2;
	PENG_GANG = 3;
}

message NoticeGangCard {
	required string user_id = 1;	  //如果有user_id 的话 不是本人出牌
	required int32 card = 2;
	required GangType gang_type = 3;  //杠的类型
	optional int32 user_pos = 4;
}
/*-------------------------------------------------*/


/*-------------------通知客户端是否 碰/杠/胡 -----------------*/
// oparator=> PENG/GANG/HU
message PushPlayerOperatorState {
	required string operator_state = 1;
	optional int32 user_pos = 3;
}
/*-------------------------------------------------*/

/*-------------------通知客户端 本局结束-----------------*/
message Item {
	required string user_id = 1;   //玩家ID
	required int32  up_score = 2;  //玩家增加或减少的积分
	repeated int32  card_list = 3; //玩家手里的牌
	optional int32 user_pos = 4;
}

message NoticeGameOver {
	required int32 type = 1;     // 1 正常结束 2 流局
	repeated Item players = 2;   //玩家的信息
}

/*-------------------------------------------------*/

/*-------------------通知玩家有人掉线-----------------*/

message NoticePlayersDisconnect {
	required string user_id = 1;
	optional int32 user_pos = 3;
}
/*-------------------------------------------------*/






/*-------------------------------------------------*/


/*-------------------玩家错误处理-----------------*/

message HandleError {
}
/*-------------------------------------------------*/




